# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your wine quality dataset (replace 'wine_data.csv' with your dataset file)
data = pd.read_csv('wine_data.csv')

# Assuming your dataset has features and 'quality' as the target variable
# Replace 'feature1', 'feature2', ..., 'featureN' with actual column names
X = data[['feature1', 'feature2', ..., 'featureN']]
y = data['quality']

# Split the data into training and testing sets (you can adjust the test_size)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Round predicted values to the nearest integer (wine quality score)
y_pred = np.round(y_pred)

# Evaluate the model using Mean Squared Error (MSE)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Plot actual vs. predicted wine quality scores
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Wine Quality")
plt.ylabel("Predicted Wine Quality")
plt.title("Actual vs. Predicted Wine Quality")
plt.show()
